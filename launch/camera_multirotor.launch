<!-- Launches a multirotor SIL vehicle in Gazebo -->

<launch>
  <arg name="mav_name"            value="multirotor"/>

  <arg name="color"               default="White"/>
  <arg name="x"                   default="4."/>
  <arg name="y"                   default="4."/>
  <arg name="z"                   default="0.1"/>
  <arg name="yaw"                 default="0"/>
  <arg name="paused"              default="false"/>
  <arg name="gui"                 default="true"/>
  <arg name="verbose"             default="false"/>
  <arg name="debug"               default="false"/>

  <include file="$(find rosflight_sim)/launch/base.launch">
    <arg name="mav_name" value="$(arg mav_name)"/>
    <arg name="color" value="$(arg color)"/>
    <arg name="x" value="$(arg x)"/>
    <arg name="y" value="$(arg y)"/>
    <arg name="z" value="$(arg z)"/>
    <arg name="yaw" value="$(arg yaw)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="verbose" value="$(arg verbose)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="xacro_file" value="$(find sim_helper)/urdf/camera_multirotor.urdf.xacro"/>
    <arg name="param_file" value="$(find rosflight_sim)/params/multirotor.yaml"/>
  </include>
  <!-- Launch fake aruco giving gps measurements -->
  <rosparam command="load" file="$(find verify_aruco)/params/body_NWU_to_camera_facing_down.yaml" />
    <node pkg="verify_aruco" name="verify_aruco_tf" type="verify_aruco" output="screen">
        <remap from="tf_cam_sim" to="multirotor/truth/NWU"/>
        <remap from="tf_calib_sim" to="agent_0/odom"/>
        <remap from="tf_cam" to="tf_cam/ned/pose_stamped"/>
        <remap from="tf_calib" to="tf_calib/ned/pose_stamped"/>
        <param name="publishing_frequency" value="24"/> <!--rate of the charuco published data: 24 is considered as the human eye rate-->
        <param name="azimuth_threshold" value="3.14"/> <!--yaw detection threshold in rad-->
        <param name="elevation_threshold" value="0.43"/> <!-- x,y detection threshold in rad-->
        <param name="z_threshold" value="2.0"/> <!--altitude detection threshold in meter-->
    </node>

</launch>
