<!-- Launches a multirotor SIL vehicle in Gazebo -->

<launch>
  <arg name="mav_name"            value="multirotor"/>

  <arg name="color"               default="White"/>
  <arg name="x"                   default="4."/>
  <arg name="y"                   default="4."/>
  <arg name="z"                   default="0.1"/>
  <arg name="yaw"                 default="0"/>
  <arg name="paused"              default="false"/>
  <arg name="gui"                 default="true"/>
  <arg name="verbose"             default="false"/>
  <arg name="debug"               default="false"/>

  <include file="$(find rosflight_sim)/launch/base.launch">
    <arg name="mav_name" value="$(arg mav_name)"/>
    <arg name="color" value="$(arg color)"/>
    <arg name="x" value="$(arg x)"/>
    <arg name="y" value="$(arg y)"/>
    <arg name="z" value="$(arg z)"/>
    <arg name="yaw" value="$(arg yaw)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="verbose" value="$(arg verbose)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="xacro_file" value="$(find sim_helper)/urdf/camera_multirotor.urdf.xacro"/>
    <arg name="param_file" value="$(find rosflight_sim)/params/multirotor.yaml"/>
  </include>
  <!-- Launch fake aruco giving gps measurements -->

    <node pkg="reef_msgs" type="OdomNWU2PoseStampedNED_node" name="">
        <remap from="odom_nwu" to="/multirotor/truth/NWU"/>
        <remap from="pose_stamped_ned" to="camera_pose_stamped_NED"/>
    </node>
    <node pkg="reef_msgs" type="OdomNWU2PoseStampedNED_node" name="">
        <remap from="odom_nwu" to="/agent_0/odom"/>
        <remap from="pose_stamped_ned" to="leader_pose_stamped_NED"/>
    </node>



<group ns="$(arg mav_name)" >

        <rosparam command="load" file="$(find verify_aruco)/params/body_to_camera/body_to_camera.yaml" />
        <rosparam command="load" file="$(find verify_aruco)/params/boardbody_to_aruco/boardbody_to_aruco.yaml" />
    <node pkg="verify_aruco" name="verify_aruco_tf" type="verify_aruco" >
	<param name ="send_gps" value="true"/>
        <remap from="tf_cam" to="/camera_pose_stamped_NED"/>
        <remap from="tf_calib" to="/leader_pose_stamped_NED"/>
        <remap from="quad_estimate" to="/quad/pose_stamped"/>
        <param name="publishing_frequency" value="24"/> <!--rate of the charuco published data: 24 is considered as the human eye rate-->
        <param name="azimuth_threshold" value="3.14"/> <!--yaw detection threshold in rad-->
        <param name="elevation_threshold" value="0.43"/> <!-- x,y detection threshold in rad-->
        <param name="z_threshold" value="2.0"/> <!--altitude detection threshold in meter-->
    </node>
</group>

    <!-- node which give gps measurement to the feedback region-->
    <node name="give_gps_in_rectangle_feedback_region_node" pkg="reef_estimator" type="give_gps_in_rectangle_feedback_region_node.py" output="screen">
<!--        <rosparam>-->
<!--            x_min: -100.,-->
<!--            x_max: 100.,-->
<!--            y_min: -100.,-->
<!--            y_max: -4.,-->
<!--        </rosparam>-->
        <param name="x_min" type="double" value="-100."/>
        <param name="x_max" type="double" value="100."/>
        <param name="y_min" type="double" value="-100."/>
        <param name="y_max" type="double" value="-4."/>
        <remap from="quad_position" to="/pose_stamped" />
    </node>

</launch>
